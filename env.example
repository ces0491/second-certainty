# Second Certainty Tax Management System - Environment Configuration
# Copy this file to .env and update with your specific values

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# For development (SQLite) - Default and recommended for local development
DATABASE_URL=sqlite:///./second_certainty.db

# For production (PostgreSQL) - Uncomment and configure for production
# DATABASE_URL=postgresql://username:password@localhost:5432/second_certainty

# Database connection pooling (optional, for PostgreSQL)
DATABASE_POOL_SIZE=10
DATABASE_MAX_OVERFLOW=20
DATABASE_POOL_TIMEOUT=30

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# JWT Secret Key - MUST be changed for production
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
SECRET_KEY=your-super-secret-key-change-this-in-production

# JWT token expiration time in minutes (default: 1 week)
ACCESS_TOKEN_EXPIRE_MINUTES=10080

# Password reset token expiration (minutes)
PASSWORD_RESET_TOKEN_EXPIRE_MINUTES=30

# Account security settings
MAX_LOGIN_ATTEMPTS=5
ACCOUNT_LOCKOUT_DURATION=30

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================

# Application metadata
APP_NAME=Second Certainty
APP_VERSION=1.0.0
API_PREFIX=/api

# Environment setting (development, staging, production)
ENVIRONMENT=development

# Debug mode (True for development, False for production)
DEBUG=True

# =============================================================================
# CORS CONFIGURATION
# =============================================================================

# Allowed origins for CORS (comma-separated for multiple origins)
CORS_ORIGINS=http://localhost:3000

# For production, use your actual domain:
# CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# =============================================================================
# SARS TAX DATA CONFIGURATION
# =============================================================================

# SARS website base URL for scraping tax data
SARS_WEBSITE_URL=https://www.sars.gov.za

# Web scraping settings
SCRAPING_TIMEOUT=30
SCRAPING_RETRIES=3

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Logging level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Log file path
LOG_FILE=logs/app.log

# Database query logging (True for development debugging, False for production)
ENABLE_QUERY_LOGGING=False

# Slow query threshold in seconds
SLOW_QUERY_THRESHOLD=1.0

# =============================================================================
# RATE LIMITING
# =============================================================================

# Enable rate limiting
ENABLE_RATE_LIMITING=True

# Default rate limit (requests per minute)
DEFAULT_RATE_LIMIT=100

# Authentication endpoint rate limit (requests per minute)
AUTH_RATE_LIMIT=5

# =============================================================================
# FILE UPLOAD CONFIGURATION
# =============================================================================

# Maximum file size in bytes (10MB = 10485760)
MAX_FILE_SIZE=10485760

# Upload directory
UPLOAD_DIR=uploads

# Allowed file types (comma-separated extensions)
ALLOWED_FILE_TYPES=.pdf,.jpg,.jpeg,.png

# =============================================================================
# EXTERNAL SERVICES (Optional - for future features)
# =============================================================================

# Email configuration (for future email features)
# SMTP_TLS=True
# SMTP_PORT=587
# SMTP_HOST=smtp.gmail.com
# SMTP_USER=your-email@gmail.com
# SMTP_PASSWORD=your-email-password

# Redis configuration (for future caching features)
# REDIS_URL=redis://localhost:6379

# Sentry error tracking (for production monitoring)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Port for development server (default: 8000)
# PORT=8000

# Host for development server (default: 127.0.0.1)
# HOST=127.0.0.1

# Auto-reload on code changes (development only)
# RELOAD=True

# =============================================================================
# PRODUCTION SETTINGS
# =============================================================================

# For production deployment, ensure these are properly configured:

# 1. Set DEBUG=False
# 2. Use a strong SECRET_KEY (64+ characters)
# 3. Configure PostgreSQL DATABASE_URL
# 4. Set appropriate CORS_ORIGINS
# 5. Set ENVIRONMENT=production
# 6. Disable ENABLE_QUERY_LOGGING
# 7. Set LOG_LEVEL=INFO or WARNING

# Production example:
# DEBUG=False
# ENVIRONMENT=production
# SECRET_KEY=your-very-secure-64-character-secret-key-here
# DATABASE_URL=postgresql://user:password@host:5432/database
# CORS_ORIGINS=https://yourdomain.com
# ENABLE_QUERY_LOGGING=False
# LOG_LEVEL=INFO